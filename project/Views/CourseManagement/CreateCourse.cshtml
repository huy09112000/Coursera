@model project.Models.Course

@{
    ViewBag.Title = "CreateCourse";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>CreateCourse</h2>

@*<script type="text/javascript">
    function validateForm() {
        const name = document.getElementById('Name');
        const code = document.getElementById('Code');
        const form = document.getElementById('Insert');
        const errorElement = document.getElementById('Error');
            
        form.addEventListener('submit', (e) => {
            let messages = []
            if (name.value === '' || name.value == null) {
                messages.push('Name is required!!');
            }

            if (messages.length > 0) {
                e.preventDefault();
                errorElement.innerHTML = messages.join(', ')
            }
        }
        )

        if (a == null || a == "", b == null || b == "") {
            alert("Please Fill All Required Field");
            return false;
        }
    }
</script>*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <form id="Insert">
        <div class="form-horizontal">
            <h4>Course</h4>
            <hr />
            <div id="error"></div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control",  @data_val = "true", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Describtion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Describtion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Describtion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @data_val = "true", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.rate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.rate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.rate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.total_rate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.total_rate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.total_rate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" onsubmit="return validateForm();" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </form>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
